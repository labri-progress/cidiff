Started by timer
Started by user martin.monperrus@inria.fr
Rebuilds build #803
Running as SYSTEM
[EnvInject] - Loading node environment variables.
Building remotely on sos-builder01-ubuntu16 (lin) in workspace /builds/workspace/spoon-control-flow
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Deferred wipeout is used...
[WS-CLEANUP] Done
The recommended git tool is: NONE
No credentials specified
Wiping out workspace first.
Cloning the remote Git repository
Cloning repository https://github.com/INRIA/spoon.git
 > git init /builds/workspace/spoon-control-flow # timeout=10
Fetching upstream changes from https://github.com/INRIA/spoon.git
 > git --version # timeout=10
 > git --version # 'git version 2.7.4'
 > git fetch --tags --progress https://github.com/INRIA/spoon.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/INRIA/spoon.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision 4128c85fcb48102e8319cd480ddc9b44f2191a3f (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 4128c85fcb48102e8319cd480ddc9b44f2191a3f # timeout=10
Commit message: "chore: Add lgtm.yml to set java version to 11 (#4190)"
 > git rev-list --no-walk 4128c85fcb48102e8319cd480ddc9b44f2191a3f # timeout=10
[spoon-control-flow] $ /bin/sh -xe /tmp/jenkins4006018833114553074.sh
+ cd spoon-control-flow
+ curl https://spoon.gforge.inria.fr/jenkins/inject_spoon_snapshot.py
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
curl: (60) server certificate verification failed. CAfile: /etc/ssl/certs/ca-certificates.crt CRLfile: none
More details here: http://curl.haxx.se/docs/sslcerts.html

curl performs SSL certificate verification by default, using a "bundle"
 of Certificate Authority (CA) public keys (CA certs). If the default
 bundle file isn't adequate, you can specify an alternate file
 using the --cacert option.
If this HTTPS server uses a certificate signed by a CA represented in
 the bundle, the certificate verification probably failed due to a
 problem with the certificate (it might be expired, or the name might
 not match the domain name in the URL).
If you'd like to turn off curl's verification of the certificate, use
 the -k (or --insecure) option.
+ python3 -c 
+ mvn clean test
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
[INFO] Scanning for projects...
[INFO] Inspecting build with total of 1 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO] 
[INFO] --------------< fr.inria.gforge.spoon:spoon-control-flow >--------------
[INFO] Building spoon-control-flow 0.0.2-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ spoon-control-flow ---
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ spoon-control-flow ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /builds/workspace/spoon-control-flow/spoon-control-flow/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ spoon-control-flow ---
[INFO] Compiling 18 source files to /builds/workspace/spoon-control-flow/spoon-control-flow/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ spoon-control-flow ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ spoon-control-flow ---
[INFO] Compiling 7 source files to /builds/workspace/spoon-control-flow/spoon-control-flow/target/test-classes
[WARNING] /builds/workspace/spoon-control-flow/spoon-control-flow/src/test/java/fr/inria/controlflow/ForwardFlowBuilderVisitorTest.java:[36,30] junit.framework.Assert in junit.framework has been deprecated
[WARNING] /builds/workspace/spoon-control-flow/spoon-control-flow/src/test/java/fr/inria/dataflow/InitializedVariablesTest.java:[32,30] junit.framework.Assert in junit.framework has been deprecated
[WARNING] /builds/workspace/spoon-control-flow/spoon-control-flow/src/test/java/fr/inria/dataflow/InitializedVariablesTest.java:[33,30] junit.framework.Assert in junit.framework has been deprecated
[WARNING] /builds/workspace/spoon-control-flow/spoon-control-flow/src/test/java/fr/inria/controlflow/ControlFlowGraphTests.java:[30,30] junit.framework.Assert in junit.framework has been deprecated
[WARNING] /builds/workspace/spoon-control-flow/spoon-control-flow/src/test/java/fr/inria/controlflow/ControlFlowGraphTests.java:[31,30] junit.framework.Assert in junit.framework has been deprecated
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ spoon-control-flow ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[ERROR] Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
[INFO] Running fr.inria.dataflow.InitializedVariablesTest
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_2 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_3 "];
3 [shape=rectangle, label="4 - int j "];
4 [shape=rectangle, label="5 - int nwh "];
5 [shape=rectangle, label="6 - int nw0 "];
6 [shape=rectangle, label="7 - int nw1 "];
7 [shape=rectangle, label="8 - double delta "];
8 [shape=rectangle, label="9 - double wn4r "];
9 [shape=rectangle, label="10 - double wk1r "];
10 [shape=rectangle, label="11 - double wk1i "];
11 [shape=rectangle, label="12 - double wk3r "];
12 [shape=rectangle, label="13 - double wk3i "];
13 [shape=rectangle, label="14 - double delta2 "];
14 [shape=rectangle, label="15 - double deltaj "];
15 [shape=rectangle, label="16 - double deltaj3 "];
16 [shape=rectangle, label="17 - ip[0] = nw "];
17 [shape=rectangle, label="18 - ip[1] = 1 "];
18 [shape=diamond, label="19 - nw > 2 "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_21 "];
20 [shape=rectangle, label="22 - nwh = nw >> 1 "];
21 [shape=rectangle, label="23 - delta = 0.7853981633974483 / nwh "];
22 [shape=rectangle, label="24 - delta2 = delta * 2 "];
23 [shape=rectangle, label="25 - wn4r = java.lang.Math.cos(delta * nwh) "];
24 [shape=rectangle, label="26 - w[0] = 1 "];
25 [shape=rectangle, label="27 - w[1] = wn4r "];
26 [shape=diamond, label="28 - nwh == 4 "];
27 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_30 "];
28 [shape=rectangle, label="31 - w[2] = java.lang.Math.cos(delta2) "];
29 [shape=rectangle, label="32 - w[3] = java.lang.Math.sin(delta2) "];
30 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_33 "];
31 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_34 "];
32 [shape=diamond, label="35 - nwh > 4 "];
33 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_37 "];
34 [shape=rectangle, label="38 - makeipt(nw) "];
35 [shape=rectangle, label="39 - w[2] = 0.5 / java.lang.Math.cos(delta2) "];
36 [shape=rectangle, label="40 - w[3] = 0.5 / java.lang.Math.cos(delta * 6) "];
37 [shape=rectangle, label="41 - j = 4 "];
38 [shape=diamond, label="43 - j < nwh "];
39 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_44 "];
40 [shape=rectangle, label="45 - deltaj = delta * j "];
41 [shape=rectangle, label="46 - deltaj3 = 3 * deltaj "];
42 [shape=rectangle, label="47 - w[j] = java.lang.Math.cos(deltaj) "];
43 [shape=rectangle, label="48 - w[j + 1] = java.lang.Math.sin(deltaj) "];
44 [shape=rectangle, label="49 - w[j + 2] = java.lang.Math.cos(deltaj3) "];
45 [shape=rectangle, label="50 - w[j + 3] = -java.lang.Math.sin(deltaj3) "];
46 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_51 "];
47 [shape=rectangle, label="52 - j += 4 "];
48 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_53 "];
49 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_54 "];
50 [shape=rectangle, label="55 - nw0 = 0 "];
51 [shape=diamond, label="57 - nwh > 2 "];
52 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_58 "];
53 [shape=rectangle, label="59 - nw1 = nw0 + nwh "];
54 [shape=rectangle, label="60 - nwh >>= 1 "];
55 [shape=rectangle, label="61 - w[nw1] = 1 "];
56 [shape=rectangle, label="62 - w[nw1 + 1] = wn4r "];
57 [shape=diamond, label="63 - nwh == 4 "];
58 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_65 "];
59 [shape=rectangle, label="66 - wk1r = w[nw0 + 4] "];
60 [shape=rectangle, label="67 - wk1i = w[nw0 + 5] "];
61 [shape=rectangle, label="68 - w[nw1 + 2] = wk1r "];
62 [shape=rectangle, label="69 - w[nw1 + 3] = wk1i "];
63 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_70 "];
64 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_71 "];
65 [shape=diamond, label="72 - nwh > 4 "];
66 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_74 "];
67 [shape=rectangle, label="75 - wk1r = w[nw0 + 4] "];
68 [shape=rectangle, label="76 - wk3r = w[nw0 + 6] "];
69 [shape=rectangle, label="77 - w[nw1 + 2] = 0.5 / wk1r "];
70 [shape=rectangle, label="78 - w[nw1 + 3] = 0.5 / wk3r "];
71 [shape=rectangle, label="79 - j = 4 "];
72 [shape=diamond, label="81 - j < nwh "];
73 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_82 "];
74 [shape=rectangle, label="83 - int idx1 = nw0 + (2 * j) "];
75 [shape=rectangle, label="84 - int idx2 = nw1 + j "];
76 [shape=rectangle, label="85 - wk1r = w[idx1] "];
77 [shape=rectangle, label="86 - wk1i = w[idx1 + 1] "];
78 [shape=rectangle, label="87 - wk3r = w[idx1 + 2] "];
79 [shape=rectangle, label="88 - wk3i = w[idx1 + 3] "];
80 [shape=rectangle, label="89 - w[idx2] = wk1r "];
81 [shape=rectangle, label="90 - w[idx2 + 1] = wk1i "];
82 [shape=rectangle, label="91 - w[idx2 + 2] = wk3r "];
83 [shape=rectangle, label="92 - w[idx2 + 3] = wk3i "];
84 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_93 "];
85 [shape=rectangle, label="94 - j += 4 "];
86 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_95 "];
87 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_96 "];
88 [shape=rectangle, label="97 - nw0 = nw1 "];
89 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_98 "];
90 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_99 "];
91 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_100 "];
92 [shape=doublecircle, label="EXIT_1 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 17 ;
 17 -> 18 ;
 18 -> 19 ;
 19 -> 20 ;
 20 -> 21 ;
 21 -> 22 ;
 22 -> 23 ;
 23 -> 24 ;
 24 -> 25 ;
 25 -> 26 ;
 26 -> 27 ;
 27 -> 28 ;
 28 -> 29 ;
 29 -> 30 ;
 26 -> 31 ;
 31 -> 32 ;
 32 -> 33 ;
 33 -> 34 ;
 34 -> 35 ;
 35 -> 36 ;
 36 -> 37 ;
 37 -> 38 ;
 38 -> 39 ;
 39 -> 40 ;
 40 -> 41 ;
 41 -> 42 ;
 42 -> 43 ;
 43 -> 44 ;
 44 -> 45 ;
 45 -> 46 ;
 46 -> 47 ;
 47 -> 38[style=dashed];
 50 -> 51 ;
 51 -> 52 ;
 52 -> 53 ;
 53 -> 54 ;
 54 -> 55 ;
 55 -> 56 ;
 56 -> 57 ;
 57 -> 58 ;
 58 -> 59 ;
 59 -> 60 ;
 60 -> 61 ;
 61 -> 62 ;
 62 -> 63 ;
 57 -> 64 ;
 64 -> 65 ;
 65 -> 66 ;
 66 -> 67 ;
 67 -> 68 ;
 68 -> 69 ;
 69 -> 70 ;
 70 -> 71 ;
 71 -> 72 ;
 72 -> 73 ;
 73 -> 74 ;
 74 -> 75 ;
 75 -> 76 ;
 76 -> 77 ;
 77 -> 78 ;
 78 -> 79 ;
 79 -> 80 ;
 80 -> 81 ;
 81 -> 82 ;
 82 -> 83 ;
 83 -> 84 ;
 84 -> 85 ;
 85 -> 72[style=dashed];
 88 -> 89 ;
 89 -> 51[style=dashed];
 91 -> 92 ;
 30 -> 50 ;
 49 -> 50 ;
 38 -> 48 ;
 48 -> 49 ;
 32 -> 49 ;
 51 -> 90 ;
 63 -> 88 ;
 87 -> 88 ;
 72 -> 86 ;
 86 -> 87 ;
 65 -> 87 ;
 90 -> 91 ;
 18 -> 91 ;
 
 }
Compiled OK
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_2 "];
2 [shape=rectangle, label="4 - int j "];
3 [shape=rectangle, label="5 - int nwh "];
4 [shape=rectangle, label="6 - int nw0 "];
5 [shape=rectangle, label="7 - int nw1 "];
6 [shape=rectangle, label="8 - double delta "];
7 [shape=rectangle, label="9 - double wn4r "];
8 [shape=rectangle, label="10 - double wk1r "];
9 [shape=rectangle, label="11 - double wk1i "];
10 [shape=rectangle, label="12 - double wk3r "];
11 [shape=rectangle, label="13 - double wk3i "];
12 [shape=rectangle, label="14 - double delta2 "];
13 [shape=rectangle, label="15 - double deltaj "];
14 [shape=rectangle, label="16 - double deltaj3 "];
15 [shape=rectangle, label="17 - ip[0] = nw "];
16 [shape=rectangle, label="18 - ip[1] = 1 "];
17 [shape=diamond, label="19 - nw > 2 "];
18 [shape=rectangle, label="22 - nwh = nw >> 1 "];
19 [shape=rectangle, label="23 - delta = 0.7853981633974483 / nwh "];
20 [shape=rectangle, label="24 - delta2 = delta * 2 "];
21 [shape=rectangle, label="25 - wn4r = java.lang.Math.cos(delta * nwh) "];
22 [shape=rectangle, label="26 - w[0] = 1 "];
23 [shape=rectangle, label="27 - w[1] = wn4r "];
24 [shape=diamond, label="28 - nwh == 4 "];
25 [shape=rectangle, label="31 - w[2] = java.lang.Math.cos(delta2) "];
26 [shape=rectangle, label="32 - w[3] = java.lang.Math.sin(delta2) "];
27 [shape=diamond, label="35 - nwh > 4 "];
28 [shape=rectangle, label="38 - makeipt(nw) "];
29 [shape=rectangle, label="39 - w[2] = 0.5 / java.lang.Math.cos(delta2) "];
30 [shape=rectangle, label="40 - w[3] = 0.5 / java.lang.Math.cos(delta * 6) "];
31 [shape=rectangle, label="41 - j = 4 "];
32 [shape=diamond, label="43 - j < nwh "];
33 [shape=rectangle, label="45 - deltaj = delta * j "];
34 [shape=rectangle, label="46 - deltaj3 = 3 * deltaj "];
35 [shape=rectangle, label="47 - w[j] = java.lang.Math.cos(deltaj) "];
36 [shape=rectangle, label="48 - w[j + 1] = java.lang.Math.sin(deltaj) "];
37 [shape=rectangle, label="49 - w[j + 2] = java.lang.Math.cos(deltaj3) "];
38 [shape=rectangle, label="50 - w[j + 3] = -java.lang.Math.sin(deltaj3) "];
39 [shape=rectangle, label="52 - j += 4 "];
40 [shape=rectangle, label="55 - nw0 = 0 "];
41 [shape=diamond, label="57 - nwh > 2 "];
42 [shape=rectangle, label="59 - nw1 = nw0 + nwh "];
43 [shape=rectangle, label="60 - nwh >>= 1 "];
44 [shape=rectangle, label="61 - w[nw1] = 1 "];
45 [shape=rectangle, label="62 - w[nw1 + 1] = wn4r "];
46 [shape=diamond, label="63 - nwh == 4 "];
47 [shape=rectangle, label="66 - wk1r = w[nw0 + 4] "];
48 [shape=rectangle, label="67 - wk1i = w[nw0 + 5] "];
49 [shape=rectangle, label="68 - w[nw1 + 2] = wk1r "];
50 [shape=rectangle, label="69 - w[nw1 + 3] = wk1i "];
51 [shape=diamond, label="72 - nwh > 4 "];
52 [shape=rectangle, label="75 - wk1r = w[nw0 + 4] "];
53 [shape=rectangle, label="76 - wk3r = w[nw0 + 6] "];
54 [shape=rectangle, label="77 - w[nw1 + 2] = 0.5 / wk1r "];
55 [shape=rectangle, label="78 - w[nw1 + 3] = 0.5 / wk3r "];
56 [shape=rectangle, label="79 - j = 4 "];
57 [shape=diamond, label="81 - j < nwh "];
58 [shape=rectangle, label="83 - int idx1 = nw0 + (2 * j) "];
59 [shape=rectangle, label="84 - int idx2 = nw1 + j "];
60 [shape=rectangle, label="85 - wk1r = w[idx1] "];
61 [shape=rectangle, label="86 - wk1i = w[idx1 + 1] "];
62 [shape=rectangle, label="87 - wk3r = w[idx1 + 2] "];
63 [shape=rectangle, label="88 - wk3i = w[idx1 + 3] "];
64 [shape=rectangle, label="89 - w[idx2] = wk1r "];
65 [shape=rectangle, label="90 - w[idx2 + 1] = wk1i "];
66 [shape=rectangle, label="91 - w[idx2 + 2] = wk3r "];
67 [shape=rectangle, label="92 - w[idx2 + 3] = wk3i "];
68 [shape=rectangle, label="94 - j += 4 "];
69 [shape=rectangle, label="97 - nw0 = nw1 "];
70 [shape=doublecircle, label="EXIT_1 "];
2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 17 ;
 18 -> 19 ;
 19 -> 20 ;
 20 -> 21 ;
 21 -> 22 ;
 22 -> 23 ;
 23 -> 24 ;
 25 -> 26 ;
 28 -> 29 ;
 29 -> 30 ;
 30 -> 31 ;
 31 -> 32 ;
 33 -> 34 ;
 34 -> 35 ;
 35 -> 36 ;
 36 -> 37 ;
 37 -> 38 ;
 39 -> 32[style=dashed];
 40 -> 41 ;
 42 -> 43 ;
 43 -> 44 ;
 44 -> 45 ;
 45 -> 46 ;
 47 -> 48 ;
 48 -> 49 ;
 49 -> 50 ;
 52 -> 53 ;
 53 -> 54 ;
 54 -> 55 ;
 55 -> 56 ;
 56 -> 57 ;
 58 -> 59 ;
 59 -> 60 ;
 60 -> 61 ;
 61 -> 62 ;
 62 -> 63 ;
 63 -> 64 ;
 64 -> 65 ;
 65 -> 66 ;
 66 -> 67 ;
 68 -> 57[style=dashed];
 1 -> 2 ;
 17 -> 18 ;
 24 -> 25 ;
 24 -> 27 ;
 27 -> 28 ;
 32 -> 33 ;
 41 -> 42 ;
 46 -> 47 ;
 46 -> 51 ;
 51 -> 52 ;
 57 -> 58 ;
 26 -> 40 ;
 38 -> 39 ;
 27 -> 40 ;
 32 -> 40 ;
 50 -> 69 ;
 67 -> 68 ;
 51 -> 69 ;
 57 -> 69 ;
 69 -> 41[style=dashed];
 17 -> 70 ;
 41 -> 70 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_102 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_103 "];
3 [shape=rectangle, label="104 - java.util.ArrayList<fr.inria.juncoprovider.testproject.ComplexFlow.Index54> eigenValues = e "];
4 [shape=rectangle, label="106 - fr.inria.juncoprovider.testproject.ComplexFlow.Index54 v "];
5 [shape=diamond, label="107 - eigenValues "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_108 "];
7 [shape=diamond, label="109 - v.data[0] < 0 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_111 "];
9 [shape=rectangle, label="112 - return false "];
10 [shape=doublecircle, label="EXIT_101 "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_113 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_114 "];
13 [shape=rectangle, label="115 - return true "];
14 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_116 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 12 -> 5[style=dashed];
 13 -> 10 ;
 14 -> 10 ;
 11 -> 12 ;
 7 -> 12 ;
 5 -> 13 ;
 
 }
Compiled OK
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_102 "];
2 [shape=rectangle, label="104 - java.util.ArrayList<fr.inria.juncoprovider.testproject.ComplexFlow.Index54> eigenValues = e "];
3 [shape=rectangle, label="106 - fr.inria.juncoprovider.testproject.ComplexFlow.Index54 v "];
4 [shape=diamond, label="107 - eigenValues "];
5 [shape=diamond, label="109 - v.data[0] < 0 "];
6 [shape=rectangle, label="112 - return false "];
7 [shape=doublecircle, label="EXIT_101 "];
8 [shape=rectangle, label="115 - return true "];
2 -> 3 ;
 3 -> 4 ;
 6 -> 7 ;
 8 -> 7 ;
 4 -> 8 ;
 1 -> 2 ;
 4 -> 5 ;
 5 -> 6 ;
 5 -> 4[style=dashed];
 
 }digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_118 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_119 "];
3 [shape=rectangle, label="120 - int count = inputs.length "];
4 [shape=rectangle, label="121 - double notInitialized "];
5 [shape=rectangle, label="122 - double value = inputs[0] "];
6 [shape=diamond, label="123 - value < (-threshold) "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_125 "];
8 [shape=rectangle, label="126 - armed = true "];
9 [shape=rectangle, label="127 - notInitialized = inputs[2] + count "];
10 [shape=rectangle, label="128 - return value * notInitialized "];
11 [shape=doublecircle, label="EXIT_117 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_129 "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_130 "];
14 [shape=diamond, label="131 - armed && (value > threshold) "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_133 "];
16 [shape=rectangle, label="134 - ++count "];
17 [shape=rectangle, label="135 - armed = false "];
18 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_136 "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_137 "];
20 [shape=rectangle, label="138 - return value * count "];
21 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_139 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 6 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 17 ;
 17 -> 18 ;
 20 -> 11 ;
 21 -> 11 ;
 12 -> 20 ;
 19 -> 20 ;
 18 -> 19 ;
 14 -> 19 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_141 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_142 "];
3 [shape=rectangle, label="143 - final int twon = 2 * n "];
4 [shape=diamond, label="144 - plan "];
5 [shape=rectangle, label="146 - 1 "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_147 "];
7 [shape=rectangle, label="148 - realForwardFull(a, offa, plan) "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_149 "];
9 [shape=rectangle, label="150 - int idx1 "];
10 [shape=rectangle, label="151 - int idx2 "];
11 [shape=rectangle, label="152 - int k = 0 "];
12 [shape=diamond, label="154 - k < (n / 2) "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_155 "];
14 [shape=rectangle, label="156 - idx1 = 2 * k "];
15 [shape=rectangle, label="157 - idx2 = offa + ((twon - idx1) % twon) "];
16 [shape=rectangle, label="158 - a[idx2] = a[offa + idx1] "];
17 [shape=rectangle, label="159 - a[idx2 + 1] = -a[(offa + idx1) + 1] "];
18 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_160 "];
19 [shape=rectangle, label="161 - k++ "];
20 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_162 "];
21 [shape=rectangle, label="163 - a[offa + n] = -a[offa + 1] "];
22 [shape=rectangle, label="164 - a[offa + 1] = 0 "];
23 [shape=rectangle, label="165 - break "];
24 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_166 "];
25 [shape=rectangle, label="167 - 2 "];
26 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_168 "];
27 [shape=rectangle, label="169 - realForwardFull(a, offa, plan) "];
28 [shape=rectangle, label="170 - int m "];
29 [shape=diamond, label="171 - (n % 2) == 0 "];
30 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_173 "];
31 [shape=rectangle, label="174 - m = n / 2 "];
32 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_175 "];
33 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_176 "];
34 [shape=rectangle, label="177 - m = (n + 1) / 2 "];
35 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_178 "];
36 [shape=rectangle, label="179 - int k = 1 "];
37 [shape=diamond, label="181 - k < m "];
38 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_182 "];
39 [shape=rectangle, label="183 - int idx1 = (offa + twon) - (2 * k) "];
40 [shape=rectangle, label="184 - int idx2 = offa + (2 * k) "];
41 [shape=rectangle, label="185 - a[idx1 + 1] = -a[idx2] "];
42 [shape=rectangle, label="186 - a[idx1] = a[idx2 - 1] "];
43 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_187 "];
44 [shape=rectangle, label="188 - k++ "];
45 [shape=rectangle, label="189 - int k = 1 "];
46 [shape=diamond, label="191 - k < n "];
47 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_192 "];
48 [shape=rectangle, label="193 - int idx = (offa + n) - k "];
49 [shape=rectangle, label="194 - double tmp = a[idx + 1] "];
50 [shape=rectangle, label="195 - a[idx + 1] = a[idx] "];
51 [shape=rectangle, label="196 - a[idx] = tmp "];
52 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_197 "];
53 [shape=rectangle, label="198 - k++ "];
54 [shape=rectangle, label="199 - a[offa + 1] = 0 "];
55 [shape=rectangle, label="200 - break "];
56 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_201 "];
57 [shape=rectangle, label="202 - 3 "];
58 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_203 "];
59 [shape=rectangle, label="204 - realForwardFull(a, offa, -1) "];
60 [shape=rectangle, label="205 - break "];
61 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_206 "];
62 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_207 "];
63 [shape=doublecircle, label="EXIT_140 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 17 ;
 17 -> 18 ;
 18 -> 19 ;
 19 -> 12[style=dashed];
 20 -> 21 ;
 21 -> 22 ;
 22 -> 23 ;
 24 -> 25 ;
 4 -> 25 ;
 25 -> 26 ;
 26 -> 27 ;
 27 -> 28 ;
 28 -> 29 ;
 29 -> 30 ;
 30 -> 31 ;
 31 -> 32 ;
 29 -> 33 ;
 33 -> 34 ;
 34 -> 35 ;
 36 -> 37 ;
 37 -> 38 ;
 38 -> 39 ;
 39 -> 40 ;
 40 -> 41 ;
 41 -> 42 ;
 42 -> 43 ;
 43 -> 44 ;
 44 -> 37[style=dashed];
 45 -> 46 ;
 46 -> 47 ;
 47 -> 48 ;
 48 -> 49 ;
 49 -> 50 ;
 50 -> 51 ;
 51 -> 52 ;
 52 -> 53 ;
 53 -> 46[style=dashed];
 54 -> 55 ;
 56 -> 57 ;
 4 -> 57 ;
 57 -> 58 ;
 58 -> 59 ;
 59 -> 60 ;
 62 -> 63 ;
 12 -> 20 ;
 23 -> 62 ;
 55 -> 62 ;
 60 -> 62 ;
 61 -> 62 ;
 32 -> 36 ;
 35 -> 36 ;
 37 -> 45 ;
 46 -> 54 ;
 
 }
Compiled OK
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_141 "];
2 [shape=rectangle, label="143 - final int twon = 2 * n "];
3 [shape=diamond, label="144 - plan "];
4 [shape=rectangle, label="146 - 1 "];
5 [shape=rectangle, label="148 - realForwardFull(a, offa, plan) "];
6 [shape=rectangle, label="150 - int idx1 "];
7 [shape=rectangle, label="151 - int idx2 "];
8 [shape=rectangle, label="152 - int k = 0 "];
9 [shape=diamond, label="154 - k < (n / 2) "];
10 [shape=rectangle, label="156 - idx1 = 2 * k "];
11 [shape=rectangle, label="157 - idx2 = offa + ((twon - idx1) % twon) "];
12 [shape=rectangle, label="158 - a[idx2] = a[offa + idx1] "];
13 [shape=rectangle, label="159 - a[idx2 + 1] = -a[(offa + idx1) + 1] "];
14 [shape=rectangle, label="161 - k++ "];
15 [shape=rectangle, label="163 - a[offa + n] = -a[offa + 1] "];
16 [shape=rectangle, label="164 - a[offa + 1] = 0 "];
17 [shape=rectangle, label="165 - break "];
18 [shape=rectangle, label="167 - 2 "];
19 [shape=rectangle, label="169 - realForwardFull(a, offa, plan) "];
20 [shape=rectangle, label="170 - int m "];
21 [shape=diamond, label="171 - (n % 2) == 0 "];
22 [shape=rectangle, label="174 - m = n / 2 "];
23 [shape=rectangle, label="177 - m = (n + 1) / 2 "];
24 [shape=rectangle, label="179 - int k = 1 "];
25 [shape=diamond, label="181 - k < m "];
26 [shape=rectangle, label="183 - int idx1 = (offa + twon) - (2 * k) "];
27 [shape=rectangle, label="184 - int idx2 = offa + (2 * k) "];
28 [shape=rectangle, label="185 - a[idx1 + 1] = -a[idx2] "];
29 [shape=rectangle, label="186 - a[idx1] = a[idx2 - 1] "];
30 [shape=rectangle, label="188 - k++ "];
31 [shape=rectangle, label="189 - int k = 1 "];
32 [shape=diamond, label="191 - k < n "];
33 [shape=rectangle, label="193 - int idx = (offa + n) - k "];
34 [shape=rectangle, label="194 - double tmp = a[idx + 1] "];
35 [shape=rectangle, label="195 - a[idx + 1] = a[idx] "];
36 [shape=rectangle, label="196 - a[idx] = tmp "];
37 [shape=rectangle, label="198 - k++ "];
38 [shape=rectangle, label="199 - a[offa + 1] = 0 "];
39 [shape=rectangle, label="200 - break "];
40 [shape=rectangle, label="202 - 3 "];
41 [shape=rectangle, label="204 - realForwardFull(a, offa, -1) "];
42 [shape=rectangle, label="205 - break "];
43 [shape=doublecircle, label="EXIT_140 "];
2 -> 3 ;
 3 -> 4 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 14 -> 9[style=dashed];
 15 -> 16 ;
 16 -> 17 ;
 3 -> 18 ;
 19 -> 20 ;
 20 -> 21 ;
 24 -> 25 ;
 26 -> 27 ;
 27 -> 28 ;
 28 -> 29 ;
 30 -> 25[style=dashed];
 31 -> 32 ;
 33 -> 34 ;
 34 -> 35 ;
 35 -> 36 ;
 37 -> 32[style=dashed];
 38 -> 39 ;
 3 -> 40 ;
 41 -> 42 ;
 25 -> 31 ;
 32 -> 38 ;
 1 -> 2 ;
 4 -> 5 ;
 5 -> 6 ;
 9 -> 10 ;
 18 -> 19 ;
 21 -> 22 ;
 21 -> 23 ;
 25 -> 26 ;
 32 -> 33 ;
 40 -> 41 ;
 13 -> 14 ;
 9 -> 15 ;
 22 -> 24 ;
 23 -> 24 ;
 29 -> 30 ;
 36 -> 37 ;
 17 -> 43 ;
 39 -> 43 ;
 42 -> 43 ;
 
 }digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_2 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_3 "];
3 [shape=rectangle, label="4 - int pp = p - 1 "];
4 [shape=rectangle, label="5 - int iter = 0 "];
5 [shape=rectangle, label="6 - double eps = java.lang.Math.pow(2.0, -52.0) "];
6 [shape=rectangle, label="7 - double tiny = java.lang.Math.pow(2.0, -966.0) "];
7 [shape=diamond, label="9 - p > 0 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_10 "];
9 [shape=rectangle, label="11 - int k "];
10 [shape=rectangle, label="12 - int kase "];
11 [shape=rectangle, label="13 - k = p - 2 "];
12 [shape=diamond, label="15 - k >= (-1) "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_16 "];
14 [shape=diamond, label="17 - k == (-1) "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_19 "];
16 [shape=rectangle, label="20 - break "];
17 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_21 "];
18 [shape=diamond, label="22 - java.lang.Math.abs(e.get(k)) <= (tiny + (eps * (java.lang.Math.abs(s.get(k)) + java.lang.Math.abs(s.get(k + 1))))) "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_24 "];
20 [shape=rectangle, label="25 - e.set(k, 0.0) "];
21 [shape=rectangle, label="26 - break "];
22 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_27 "];
23 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_28 "];
24 [shape=rectangle, label="29 - k-- "];
25 [shape=diamond, label="30 - k == (p - 2) "];
26 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_32 "];
27 [shape=rectangle, label="33 - kase = 4 "];
28 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_34 "];
29 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_35 "];
30 [shape=rectangle, label="36 - int ks "];
31 [shape=rectangle, label="37 - ks = p - 1 "];
32 [shape=diamond, label="39 - ks >= k "];
33 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_40 "];
34 [shape=diamond, label="41 - ks == k "];
35 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_43 "];
36 [shape=rectangle, label="44 - break "];
37 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_45 "];
38 [shape=rectangle, label="46 - double t = (ks != p ? java.lang.Math.abs(e.get(ks)) : 0.0) + (ks != (k + 1) ? java.lang.Math.abs(e.get(ks - 1)) : 0.0) "];
39 [shape=diamond, label="47 - java.lang.Math.abs(s.get(ks)) <= (tiny + (eps * t)) "];
40 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_49 "];
41 [shape=rectangle, label="50 - s.set(ks, 0.0) "];
42 [shape=rectangle, label="51 - break "];
43 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_52 "];
44 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_53 "];
45 [shape=rectangle, label="54 - ks-- "];
46 [shape=diamond, label="55 - ks == k "];
47 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_57 "];
48 [shape=rectangle, label="58 - kase = 3 "];
49 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_59 "];
50 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_60 "];
51 [shape=diamond, label="61 - ks == (p - 1) "];
52 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_63 "];
53 [shape=rectangle, label="64 - kase = 1 "];
54 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_65 "];
55 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_66 "];
56 [shape=rectangle, label="67 - kase = 2 "];
57 [shape=rectangle, label="68 - k = ks "];
58 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_69 "];
59 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_70 "];
60 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_71 "];
61 [shape=rectangle, label="72 - k++ "];
62 [shape=diamond, label="73 - kase "];
63 [shape=rectangle, label="75 - 1 "];
64 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_76 "];
65 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_77 "];
66 [shape=rectangle, label="78 - double f = e.get(p - 2) "];
67 [shape=rectangle, label="79 - e.set(p - 2, 0.0) "];
68 [shape=rectangle, label="80 - int j = p - 2 "];
69 [shape=diamond, label="82 - j >= k "];
70 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_83 "];
71 [shape=rectangle, label="84 - double sj = s.get(j) "];
72 [shape=rectangle, label="85 - double t = java.lang.Math.hypot(sj, f) "];
73 [shape=rectangle, label="86 - double cs = sj / t "];
74 [shape=rectangle, label="87 - double sn = f / t "];
75 [shape=rectangle, label="88 - s.set(j, j, t) "];
76 [shape=diamond, label="89 - j != k "];
77 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_91 "];
78 [shape=rectangle, label="92 - f = (-sn) * e.get(j - 1) "];
79 [shape=rectangle, label="93 - e.set(j - 1, cs * e.get(j - 1)) "];
80 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_94 "];
81 [shape=rectangle, label="95 - int i = 0 "];
82 [shape=diamond, label="97 - i < cc "];
83 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_98 "];
84 [shape=rectangle, label="99 - t = (cs * v.get(i, j)) + (sn * v.get(i, p - 1)) "];
85 [shape=rectangle, label="100 - v.set(i, p - 1, ((-sn) * v.get(i, j)) + (cs * v.get(i, p - 1))) "];
86 [shape=rectangle, label="101 - v.set(i, j, t) "];
87 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_102 "];
88 [shape=rectangle, label="103 - i++ "];
89 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_104 "];
90 [shape=rectangle, label="105 - j-- "];
91 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_106 "];
92 [shape=rectangle, label="107 - break "];
93 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_108 "];
94 [shape=rectangle, label="109 - 2 "];
95 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_110 "];
96 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_111 "];
97 [shape=rectangle, label="112 - double f = e.get(k - 1) "];
98 [shape=rectangle, label="113 - e.set(k - 1, 0.0) "];
99 [shape=rectangle, label="114 - int j = k "];
100 [shape=diamond, label="116 - j < p "];
101 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_117 "];
102 [shape=rectangle, label="118 - double sj = s.get(j) "];
103 [shape=rectangle, label="119 - double t = java.lang.Math.hypot(sj, f) "];
104 [shape=rectangle, label="120 - double cs = sj / t "];
105 [shape=rectangle, label="121 - double sn = f / t "];
106 [shape=rectangle, label="122 - s.set(j, j, t) "];
107 [shape=rectangle, label="123 - f = (-sn) * e.get(j) "];
108 [shape=rectangle, label="124 - e.set(j, cs * e.get(j)) "];
109 [shape=rectangle, label="125 - int i = 0 "];
110 [shape=diamond, label="127 - i < rc "];
111 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_128 "];
112 [shape=rectangle, label="129 - t = (cs * u.get(i, j)) + (sn * u.get(i, k - 1)) "];
113 [shape=rectangle, label="130 - u.set(i, k - 1, ((-sn) * u.get(i, j)) + (cs * u.get(i, k - 1))) "];
114 [shape=rectangle, label="131 - u.set(i, j, t) "];
115 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_132 "];
116 [shape=rectangle, label="133 - i++ "];
117 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_134 "];
118 [shape=rectangle, label="135 - j++ "];
119 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_136 "];
120 [shape=rectangle, label="137 - break "];
121 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_138 "];
122 [shape=rectangle, label="139 - 3 "];
123 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_140 "];
124 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_141 "];
125 [shape=rectangle, label="142 - double scale = java.lang.Math.max(java.lang.Math.max(java.lang.Math.max(java.lang.Math.max(java.lang.Math.abs(s.get(p - 1)), java.lang.Math.abs(s.get(p - 2))), java.lang.Math.abs(e.get(p - 2))), java.lang.Math.abs(s.get(k))), java.lang.Math.abs(e.get(k))) "];
126 [shape=rectangle, label="143 - double sp = s.get(p - 1) / scale "];
127 [shape=rectangle, label="144 - double spm1 = s.get(p - 2) / scale "];
128 [shape=rectangle, label="145 - double epm1 = e.get(p - 2) / scale "];
129 [shape=rectangle, label="146 - double sk = s.get(k) / scale "];
130 [shape=rectangle, label="147 - double ek = e.get(k) / scale "];
131 [shape=rectangle, label="148 - double b = (((spm1 + sp) * (spm1 - sp)) + (epm1 * epm1)) / 2.0 "];
132 [shape=rectangle, label="149 - double c = (sp * epm1) * (sp * epm1) "];
133 [shape=rectangle, label="150 - double shift = 0.0 "];
134 [shape=diamond, label="151 - (b != 0.0) | (c != 0.0) "];
135 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_153 "];
136 [shape=rectangle, label="154 - shift = java.lang.Math.sqrt((b * b) + c) "];
137 [shape=diamond, label="155 - b < 0.0 "];
138 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_157 "];
139 [shape=rectangle, label="158 - shift = -shift "];
140 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_159 "];
141 [shape=rectangle, label="160 - shift = c / (b + shift) "];
142 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_161 "];
143 [shape=rectangle, label="162 - double f = ((sk + sp) * (sk - sp)) + shift "];
144 [shape=rectangle, label="163 - double g = sk * ek "];
145 [shape=rectangle, label="164 - int j = k "];
146 [shape=diamond, label="166 - j < (p - 1) "];
147 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_167 "];
148 [shape=rectangle, label="168 - double t = java.lang.Math.hypot(f, g) "];
149 [shape=rectangle, label="169 - double cs = f / t "];
150 [shape=rectangle, label="170 - double sn = g / t "];
151 [shape=diamond, label="171 - j != k "];
152 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_173 "];
153 [shape=rectangle, label="174 - e.set(j - 1, t) "];
154 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_175 "];
155 [shape=rectangle, label="176 - double sj = s.get(j) "];
156 [shape=rectangle, label="177 - f = (cs * sj) + (sn * e.get(j)) "];
157 [shape=rectangle, label="178 - e.set(j, (cs * e.get(j)) - (sn * sj)) "];
158 [shape=rectangle, label="179 - g = sn * s.get(j + 1) "];
159 [shape=rectangle, label="180 - s.set(j + 1, cs * s.get(j + 1)) "];
160 [shape=rectangle, label="181 - int i = 0 "];
161 [shape=diamond, label="183 - i < cc "];
162 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_184 "];
163 [shape=rectangle, label="185 - t = (cs * v.get(i, j)) + (sn * v.get(i, j + 1)) "];
164 [shape=rectangle, label="186 - v.set(i, j + 1, ((-sn) * v.get(i, j)) + (cs * v.get(i, j + 1))) "];
165 [shape=rectangle, label="187 - v.set(i, j, t) "];
166 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_188 "];
167 [shape=rectangle, label="189 - i++ "];
168 [shape=rectangle, label="190 - t = java.lang.Math.hypot(f, g) "];
169 [shape=rectangle, label="191 - cs = f / t "];
170 [shape=rectangle, label="192 - sn = g / t "];
171 [shape=rectangle, label="193 - s.set(j, t) "];
172 [shape=rectangle, label="194 - f = (cs * e.get(j)) + (sn * s.get(j + 1)) "];
173 [shape=rectangle, label="195 - s.set(j + 1, ((-sn) * e.get(j)) + (cs * s.get(j + 1))) "];
174 [shape=rectangle, label="196 - g = sn * e.get(j + 1) "];
175 [shape=rectangle, label="197 - e.set(j + 1, e.get(j + 1) * cs) "];
176 [shape=diamond, label="198 - j < (rc - 1) "];
177 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_200 "];
178 [shape=rectangle, label="201 - int i = 0 "];
179 [shape=diamond, label="203 - i < rc "];
180 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_204 "];
181 [shape=rectangle, label="205 - t = (cs * u.get(i, j)) + (sn * u.get(i, j + 1)) "];
182 [shape=rectangle, label="206 - u.set(i, j + 1, ((-sn) * u.get(i, j)) + (cs * u.get(i, j + 1))) "];
183 [shape=rectangle, label="207 - u.set(i, j, t) "];
184 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_208 "];
185 [shape=rectangle, label="209 - i++ "];
186 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_210 "];
187 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_211 "];
188 [shape=rectangle, label="212 - j++ "];
189 [shape=rectangle, label="213 - e.set(p - 2, f) "];
190 [shape=rectangle, label="214 - iter = iter + 1 "];
191 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_215 "];
192 [shape=rectangle, label="216 - break "];
193 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_217 "];
194 [shape=rectangle, label="218 - 4 "];
195 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_219 "];
196 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_220 "];
197 [shape=rectangle, label="221 - double skk = s.get(k) "];
198 [shape=diamond, label="222 - skk <= 0.0 "];
199 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_224 "];
200 [shape=rectangle, label="225 - s.set(k, -skk) "];
201 [shape=rectangle, label="226 - int i = 0 "];
202 [shape=diamond, label="228 - i <= pp "];
203 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_229 "];
204 [shape=rectangle, label="230 - v.set(i, k, -v.get(i, k)) "];
205 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_231 "];
206 [shape=rectangle, label="232 - i++ "];
207 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_233 "];
208 [shape=diamond, label="235 - k < pp "];
209 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_236 "];
210 [shape=diamond, label="237 - s.get(k) >= s.get(k + 1) "];
211 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_239 "];
212 [shape=rectangle, label="240 - break "];
213 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_241 "];
214 [shape=rectangle, label="242 - double t = s.get(k) "];
215 [shape=rectangle, label="243 - s.set(k, s.get(k + 1)) "];
216 [shape=rectangle, label="244 - s.set(k + 1, t) "];
217 [shape=diamond, label="245 - k < (cc - 1) "];
218 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_247 "];
219 [shape=rectangle, label="248 - v.set(k, ((double) (k)) + 1) "];
220 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_249 "];
221 [shape=diamond, label="250 - k < (rc - 1) "];
222 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_252 "];
223 [shape=rectangle, label="253 - u.set(k, ((double) (k)) + 1) "];
224 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_254 "];
225 [shape=rectangle, label="255 - k++ "];
226 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_256 "];
227 [shape=rectangle, label="257 - iter = 0 "];
228 [shape=rectangle, label="258 - p-- "];
229 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_259 "];
230 [shape=rectangle, label="260 - break "];
231 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_261 "];
232 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_262 "];
233 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_263 "];
234 [shape=doublecircle, label="EXIT_1 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 18 -> 19 ;
 19 -> 20 ;
 20 -> 21 ;
 23 -> 24 ;
 24 -> 12[style=dashed];
 25 -> 26 ;
 26 -> 27 ;
 27 -> 28 ;
 25 -> 29 ;
 29 -> 30 ;
 30 -> 31 ;
 31 -> 32 ;
 32 -> 33 ;
 33 -> 34 ;
 34 -> 35 ;
 35 -> 36 ;
 38 -> 39 ;
 39 -> 40 ;
 40 -> 41 ;
 41 -> 42 ;
 44 -> 45 ;
 45 -> 32[style=dashed];
 46 -> 47 ;
 47 -> 48 ;
 48 -> 49 ;
 46 -> 50 ;
 50 -> 51 ;
 51 -> 52 ;
 52 -> 53 ;
 53 -> 54 ;
 51 -> 55 ;
 55 -> 56 ;
 56 -> 57 ;
 57 -> 58 ;
 61 -> 62 ;
 62 -> 63 ;
 63 -> 64 ;
 64 -> 65 ;
 65 -> 66 ;
 66 -> 67 ;
 67 -> 68 ;
 68 -> 69 ;
 69 -> 70 ;
 70 -> 71 ;
 71 -> 72 ;
 72 -> 73 ;
 73 -> 74 ;
 74 -> 75 ;
 75 -> 76 ;
 76 -> 77 ;
 77 -> 78 ;
 78 -> 79 ;
 79 -> 80 ;
 81 -> 82 ;
 82 -> 83 ;
 83 -> 84 ;
 84 -> 85 ;
 85 -> 86 ;
 86 -> 87 ;
 87 -> 88 ;
 88 -> 82[style=dashed];
 89 -> 90 ;
 90 -> 69[style=dashed];
 91 -> 92 ;
 93 -> 94 ;
 62 -> 94 ;
 94 -> 95 ;
 95 -> 96 ;
 96 -> 97 ;
 97 -> 98 ;
 98 -> 99 ;
 99 -> 100 ;
 100 -> 101 ;
 101 -> 102 ;
 102 -> 103 ;
 103 -> 104 ;
 104 -> 105 ;
 105 -> 106 ;
 106 -> 107 ;
 107 -> 108 ;
 108 -> 109 ;
 109 -> 110 ;
 110 -> 111 ;
 111 -> 112 ;
 112 -> 113 ;
 113 -> 114 ;
 114 -> 115 ;
 115 -> 116 ;
 116 -> 110[style=dashed];
 117 -> 118 ;
 118 -> 100[style=dashed];
 119 -> 120 ;
 121 -> 122 ;
 62 -> 122 ;
 122 -> 123 ;
 123 -> 124 ;
 124 -> 125 ;
 125 -> 126 ;
 126 -> 127 ;
 127 -> 128 ;
 128 -> 129 ;
 129 -> 130 ;
 130 -> 131 ;
 131 -> 132 ;
 132 -> 133 ;
 133 -> 134 ;
 134 -> 135 ;
 135 -> 136 ;
 136 -> 137 ;
 137 -> 138 ;
 138 -> 139 ;
 139 -> 140 ;
 141 -> 142 ;
 143 -> 144 ;
 144 -> 145 ;
 145 -> 146 ;
 146 -> 147 ;
 147 -> 148 ;
 148 -> 149 ;
 149 -> 150 ;
 150 -> 151 ;
 151 -> 152 ;
 152 -> 153 ;
 153 -> 154 ;
 155 -> 156 ;
 156 -> 157 ;
 157 -> 158 ;
 158 -> 159 ;
 159 -> 160 ;
 160 -> 161 ;
 161 -> 162 ;
 162 -> 163 ;
 163 -> 164 ;
 164 -> 165 ;
 165 -> 166 ;
 166 -> 167 ;
 167 -> 161[style=dashed];
 168 -> 169 ;
 169 -> 170 ;
 170 -> 171 ;
 171 -> 172 ;
 172 -> 173 ;
 173 -> 174 ;
 174 -> 175 ;
 175 -> 176 ;
 176 -> 177 ;
 177 -> 178 ;
 178 -> 179 ;
 179 -> 180 ;
 180 -> 181 ;
 181 -> 182 ;
 182 -> 183 ;
 183 -> 184 ;
 184 -> 185 ;
 185 -> 179[style=dashed];
 187 -> 188 ;
 188 -> 146[style=dashed];
 189 -> 190 ;
 190 -> 191 ;
 191 -> 192 ;
 193 -> 194 ;
 62 -> 194 ;
 194 -> 195 ;
 195 -> 196 ;
 196 -> 197 ;
 197 -> 198 ;
 198 -> 199 ;
 199 -> 200 ;
 200 -> 201 ;
 201 -> 202 ;
 202 -> 203 ;
 203 -> 204 ;
 204 -> 205 ;
 205 -> 206 ;
 206 -> 202[style=dashed];
 208 -> 209 ;
 209 -> 210 ;
 210 -> 211 ;
 211 -> 212 ;
 214 -> 215 ;
 215 -> 216 ;
 216 -> 217 ;
 217 -> 218 ;
 218 -> 219 ;
 219 -> 220 ;
 221 -> 222 ;
 222 -> 223 ;
 223 -> 224 ;
 225 -> 226 ;
 226 -> 208[style=dashed];
 227 -> 228 ;
 228 -> 229 ;
 229 -> 230 ;
 232 -> 7[style=dashed];
 233 -> 234 ;
 7 -> 233 ;
 16 -> 25 ;
 21 -> 25 ;
 12 -> 25 ;
 17 -> 18 ;
 14 -> 18 ;
 22 -> 23 ;
 18 -> 23 ;
 28 -> 61 ;
 60 -> 61 ;
 36 -> 46 ;
 42 -> 46 ;
 32 -> 46 ;
 37 -> 38 ;
 34 -> 38 ;
 43 -> 44 ;
 39 -> 44 ;
 49 -> 60 ;
 59 -> 60 ;
 54 -> 59 ;
 58 -> 59 ;
 80 -> 81 ;
 76 -> 81 ;
 82 -> 89 ;
 69 -> 91 ;
 92 -> 232 ;
 120 -> 232 ;
 192 -> 232 ;
 230 -> 232 ;
 231 -> 232 ;
 110 -> 117 ;
 100 -> 119 ;
 140 -> 141 ;
 137 -> 141 ;
 142 -> 143 ;
 134 -> 143 ;
 154 -> 155 ;
 151 -> 155 ;
 161 -> 168 ;
 179 -> 186 ;
 186 -> 187 ;
 176 -> 187 ;
 146 -> 189 ;
 202 -> 207 ;
 207 -> 208 ;
 198 -> 208 ;
 208 -> 227 ;
 212 -> 227 ;
 213 -> 214 ;
 210 -> 214 ;
 220 -> 221 ;
 217 -> 221 ;
 224 -> 225 ;
 221 -> 225 ;
 
 }
Compiled OK
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_2 "];
2 [shape=rectangle, label="4 - int pp = p - 1 "];
3 [shape=rectangle, label="5 - int iter = 0 "];
4 [shape=rectangle, label="6 - double eps = java.lang.Math.pow(2.0, -52.0) "];
5 [shape=rectangle, label="7 - double tiny = java.lang.Math.pow(2.0, -966.0) "];
6 [shape=diamond, label="9 - p > 0 "];
7 [shape=rectangle, label="11 - int k "];
8 [shape=rectangle, label="12 - int kase "];
9 [shape=rectangle, label="13 - k = p - 2 "];
10 [shape=diamond, label="15 - k >= (-1) "];
11 [shape=diamond, label="17 - k == (-1) "];
12 [shape=rectangle, label="20 - break "];
13 [shape=diamond, label="22 - java.lang.Math.abs(e.get(k)) <= (tiny + (eps * (java.lang.Math.abs(s.get(k)) + java.lang.Math.abs(s.get(k + 1))))) "];
14 [shape=rectangle, label="25 - e.set(k, 0.0) "];
15 [shape=rectangle, label="26 - break "];
16 [shape=rectangle, label="29 - k-- "];
17 [shape=diamond, label="30 - k == (p - 2) "];
18 [shape=rectangle, label="33 - kase = 4 "];
19 [shape=rectangle, label="36 - int ks "];
20 [shape=rectangle, label="37 - ks = p - 1 "];
21 [shape=diamond, label="39 - ks >= k "];
22 [shape=diamond, label="41 - ks == k "];
23 [shape=rectangle, label="44 - break "];
24 [shape=rectangle, label="46 - double t = (ks != p ? java.lang.Math.abs(e.get(ks)) : 0.0) + (ks != (k + 1) ? java.lang.Math.abs(e.get(ks - 1)) : 0.0) "];
25 [shape=diamond, label="47 - java.lang.Math.abs(s.get(ks)) <= (tiny + (eps * t)) "];
26 [shape=rectangle, label="50 - s.set(ks, 0.0) "];
27 [shape=rectangle, label="51 - break "];
28 [shape=rectangle, label="54 - ks-- "];
29 [shape=diamond, label="55 - ks == k "];
30 [shape=rectangle, label="58 - kase = 3 "];
31 [shape=diamond, label="61 - ks == (p - 1) "];
32 [shape=rectangle, label="64 - kase = 1 "];
33 [shape=rectangle, label="67 - kase = 2 "];
34 [shape=rectangle, label="68 - k = ks "];
35 [shape=rectangle, label="72 - k++ "];
36 [shape=diamond, label="73 - kase "];
37 [shape=rectangle, label="75 - 1 "];
38 [shape=rectangle, label="78 - double f = e.get(p - 2) "];
39 [shape=rectangle, label="79 - e.set(p - 2, 0.0) "];
40 [shape=rectangle, label="80 - int j = p - 2 "];
41 [shape=diamond, label="82 - j >= k "];
42 [shape=rectangle, label="84 - double sj = s.get(j) "];
43 [shape=rectangle, label="85 - double t = java.lang.Math.hypot(sj, f) "];
44 [shape=rectangle, label="86 - double cs = sj / t "];
45 [shape=rectangle, label="87 - double sn = f / t "];
46 [shape=rectangle, label="88 - s.set(j, j, t) "];
47 [shape=diamond, label="89 - j != k "];
48 [shape=rectangle, label="92 - f = (-sn) * e.get(j - 1) "];
49 [shape=rectangle, label="93 - e.set(j - 1, cs * e.get(j - 1)) "];
50 [shape=rectangle, label="95 - int i = 0 "];
51 [shape=diamond, label="97 - i < cc "];
52 [shape=rectangle, label="99 - t = (cs * v.get(i, j)) + (sn * v.get(i, p - 1)) "];
53 [shape=rectangle, label="100 - v.set(i, p - 1, ((-sn) * v.get(i, j)) + (cs * v.get(i, p - 1))) "];
54 [shape=rectangle, label="101 - v.set(i, j, t) "];
55 [shape=rectangle, label="103 - i++ "];
56 [shape=rectangle, label="105 - j-- "];
57 [shape=rectangle, label="107 - break "];
58 [shape=rectangle, label="109 - 2 "];
59 [shape=rectangle, label="112 - double f = e.get(k - 1) "];
60 [shape=rectangle, label="113 - e.set(k - 1, 0.0) "];
61 [shape=rectangle, label="114 - int j = k "];
62 [shape=diamond, label="116 - j < p "];
63 [shape=rectangle, label="118 - double sj = s.get(j) "];
64 [shape=rectangle, label="119 - double t = java.lang.Math.hypot(sj, f) "];
65 [shape=rectangle, label="120 - double cs = sj / t "];
66 [shape=rectangle, label="121 - double sn = f / t "];
67 [shape=rectangle, label="122 - s.set(j, j, t) "];
68 [shape=rectangle, label="123 - f = (-sn) * e.get(j) "];
69 [shape=rectangle, label="124 - e.set(j, cs * e.get(j)) "];
70 [shape=rectangle, label="125 - int i = 0 "];
71 [shape=diamond, label="127 - i < rc "];
72 [shape=rectangle, label="129 - t = (cs * u.get(i, j)) + (sn * u.get(i, k - 1)) "];
73 [shape=rectangle, label="130 - u.set(i, k - 1, ((-sn) * u.get(i, j)) + (cs * u.get(i, k - 1))) "];
74 [shape=rectangle, label="131 - u.set(i, j, t) "];
75 [shape=rectangle, label="133 - i++ "];
76 [shape=rectangle, label="135 - j++ "];
77 [shape=rectangle, label="137 - break "];
78 [shape=rectangle, label="139 - 3 "];
79 [shape=rectangle, label="142 - double scale = java.lang.Math.max(java.lang.Math.max(java.lang.Math.max(java.lang.Math.max(java.lang.Math.abs(s.get(p - 1)), java.lang.Math.abs(s.get(p - 2))), java.lang.Math.abs(e.get(p - 2))), java.lang.Math.abs(s.get(k))), java.lang.Math.abs(e.get(k))) "];
80 [shape=rectangle, label="143 - double sp = s.get(p - 1) / scale "];
81 [shape=rectangle, label="144 - double spm1 = s.get(p - 2) / scale "];
82 [shape=rectangle, label="145 - double epm1 = e.get(p - 2) / scale "];
83 [shape=rectangle, label="146 - double sk = s.get(k) / scale "];
84 [shape=rectangle, label="147 - double ek = e.get(k) / scale "];
85 [shape=rectangle, label="148 - double b = (((spm1 + sp) * (spm1 - sp)) + (epm1 * epm1)) / 2.0 "];
86 [shape=rectangle, label="149 - double c = (sp * epm1) * (sp * epm1) "];
87 [shape=rectangle, label="150 - double shift = 0.0 "];
88 [shape=diamond, label="151 - (b != 0.0) | (c != 0.0) "];
89 [shape=rectangle, label="154 - shift = java.lang.Math.sqrt((b * b) + c) "];
90 [shape=diamond, label="155 - b < 0.0 "];
91 [shape=rectangle, label="158 - shift = -shift "];
92 [shape=rectangle, label="160 - shift = c / (b + shift) "];
93 [shape=rectangle, label="162 - double f = ((sk + sp) * (sk - sp)) + shift "];
94 [shape=rectangle, label="163 - double g = sk * ek "];
95 [shape=rectangle, label="164 - int j = k "];
96 [shape=diamond, label="166 - j < (p - 1) "];
97 [shape=rectangle, label="168 - double t = java.lang.Math.hypot(f, g) "];
98 [shape=rectangle, label="169 - double cs = f / t "];
99 [shape=rectangle, label="170 - double sn = g / t "];
100 [shape=diamond, label="171 - j != k "];
101 [shape=rectangle, label="174 - e.set(j - 1, t) "];
102 [shape=rectangle, label="176 - double sj = s.get(j) "];
103 [shape=rectangle, label="177 - f = (cs * sj) + (sn * e.get(j)) "];
104 [shape=rectangle, label="178 - e.set(j, (cs * e.get(j)) - (sn * sj)) "];
105 [shape=rectangle, label="179 - g = sn * s.get(j + 1) "];
106 [shape=rectangle, label="180 - s.set(j + 1, cs * s.get(j + 1)) "];
107 [shape=rectangle, label="181 - int i = 0 "];
108 [shape=diamond, label="183 - i < cc "];
109 [shape=rectangle, label="185 - t = (cs * v.get(i, j)) + (sn * v.get(i, j + 1)) "];
110 [shape=rectangle, label="186 - v.set(i, j + 1, ((-sn) * v.get(i, j)) + (cs * v.get(i, j + 1))) "];
111 [shape=rectangle, label="187 - v.set(i, j, t) "];
112 [shape=rectangle, label="189 - i++ "];
113 [shape=rectangle, label="190 - t = java.lang.Math.hypot(f, g) "];
114 [shape=rectangle, label="191 - cs = f / t "];
115 [shape=rectangle, label="192 - sn = g / t "];
116 [shape=rectangle, label="193 - s.set(j, t) "];
117 [shape=rectangle, label="194 - f = (cs * e.get(j)) + (sn * s.get(j + 1)) "];
118 [shape=rectangle, label="195 - s.set(j + 1, ((-sn) * e.get(j)) + (cs * s.get(j + 1))) "];
119 [shape=rectangle, label="196 - g = sn * e.get(j + 1) "];
120 [shape=rectangle, label="197 - e.set(j + 1, e.get(j + 1) * cs) "];
121 [shape=diamond, label="198 - j < (rc - 1) "];
122 [shape=rectangle, label="201 - int i = 0 "];
123 [shape=diamond, label="203 - i < rc "];
124 [shape=rectangle, label="205 - t = (cs * u.get(i, j)) + (sn * u.get(i, j + 1)) "];
125 [shape=rectangle, label="206 - u.set(i, j + 1, ((-sn) * u.get(i, j)) + (cs * u.get(i, j + 1))) "];
126 [shape=rectangle, label="207 - u.set(i, j, t) "];
127 [shape=rectangle, label="209 - i++ "];
128 [shape=rectangle, label="212 - j++ "];
129 [shape=rectangle, label="213 - e.set(p - 2, f) "];
130 [shape=rectangle, label="214 - iter = iter + 1 "];
131 [shape=rectangle, label="216 - break "];
132 [shape=rectangle, label="218 - 4 "];
133 [shape=rectangle, label="221 - double skk = s.get(k) "];
134 [shape=diamond, label="222 - skk <= 0.0 "];
135 [shape=rectangle, label="225 - s.set(k, -skk) "];
136 [shape=rectangle, label="226 - int i = 0 "];
137 [shape=diamond, label="228 - i <= pp "];
138 [shape=rectangle, label="230 - v.set(i, k, -v.get(i, k)) "];
139 [shape=rectangle, label="232 - i++ "];
140 [shape=diamond, label="235 - k < pp "];
141 [shape=diamond, label="237 - s.get(k) >= s.get(k + 1) "];
142 [shape=rectangle, label="240 - break "];
143 [shape=rectangle, label="242 - double t = s.get(k) "];
144 [shape=rectangle, label="243 - s.set(k, s.get(k + 1)) "];
145 [shape=rectangle, label="244 - s.set(k + 1, t) "];
146 [shape=diamond, label="245 - k < (cc - 1) "];
147 [shape=rectangle, label="248 - v.set(k, ((double) (k)) + 1) "];
148 [shape=diamond, label="250 - k < (rc - 1) "];
149 [shape=rectangle, label="253 - u.set(k, ((double) (k)) + 1) "];
150 [shape=rectangle, label="255 - k++ "];
151 [shape=rectangle, label="257 - iter = 0 "];
152 [shape=rectangle, label="258 - p-- "];
153 [shape=rectangle, label="260 - break "];
154 [shape=doublecircle, label="EXIT_1 "];
2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 14 -> 15 ;
 16 -> 10[style=dashed];
 19 -> 20 ;
 20 -> 21 ;
 24 -> 25 ;
 26 -> 27 ;
 28 -> 21[style=dashed];
 33 -> 34 ;
 35 -> 36 ;
 36 -> 37 ;
 38 -> 39 ;
 39 -> 40 ;
 40 -> 41 ;
 42 -> 43 ;
 43 -> 44 ;
 44 -> 45 ;
 45 -> 46 ;
 46 -> 47 ;
 48 -> 49 ;
 50 -> 51 ;
 52 -> 53 ;
 53 -> 54 ;
 55 -> 51[style=dashed];
 56 -> 41[style=dashed];
 36 -> 58 ;
 59 -> 60 ;
 60 -> 61 ;
 61 -> 62 ;
 63 -> 64 ;
 64 -> 65 ;
 65 -> 66 ;
 66 -> 67 ;
 67 -> 68 ;
 68 -> 69 ;
 69 -> 70 ;
 70 -> 71 ;
 72 -> 73 ;
 73 -> 74 ;
 75 -> 71[style=dashed];
 76 -> 62[style=dashed];
 36 -> 78 ;
 79 -> 80 ;
 80 -> 81 ;
 81 -> 82 ;
 82 -> 83 ;
 83 -> 84 ;
 84 -> 85 ;
 85 -> 86 ;
 86 -> 87 ;
 87 -> 88 ;
 89 -> 90 ;
 93 -> 94 ;
 94 -> 95 ;
 95 -> 96 ;
 97 -> 98 ;
 98 -> 99 ;
 99 -> 100 ;
 102 -> 103 ;
 103 -> 104 ;
 104 -> 105 ;
 105 -> 106 ;
 106 -> 107 ;
 107 -> 108 ;
 109 -> 110 ;
 110 -> 111 ;
 112 -> 108[style=dashed];
 113 -> 114 ;
 114 -> 115 ;
 115 -> 116 ;
 116 -> 117 ;
 117 -> 118 ;
 118 -> 119 ;
 119 -> 120 ;
 120 -> 121 ;
 122 -> 123 ;
 124 -> 125 ;
 125 -> 126 ;
 127 -> 123[style=dashed];
 128 -> 96[style=dashed];
 129 -> 130 ;
 36 -> 132 ;
 133 -> 134 ;
 135 -> 136 ;
 136 -> 137 ;
 139 -> 137[style=dashed];
 143 -> 144 ;
 144 -> 145 ;
 145 -> 146 ;
 151 -> 152 ;
 12 -> 17 ;
 15 -> 17 ;
 10 -> 17 ;
 11 -> 13 ;
 23 -> 29 ;
 27 -> 29 ;
 21 -> 29 ;
 22 -> 24 ;
 47 -> 50 ;
 90 -> 92 ;
 88 -> 93 ;
 100 -> 102 ;
 108 -> 113 ;
 96 -> 129 ;
 134 -> 140 ;
 140 -> 151 ;
 142 -> 151 ;
 141 -> 143 ;
 146 -> 148 ;
 148 -> 150 ;
 1 -> 2 ;
 6 -> 7 ;
 10 -> 11 ;
 11 -> 12 ;
 13 -> 14 ;
 17 -> 18 ;
 17 -> 19 ;
 21 -> 22 ;
 22 -> 23 ;
 25 -> 26 ;
 29 -> 30 ;
 29 -> 31 ;
 31 -> 32 ;
 31 -> 33 ;
 37 -> 38 ;
 41 -> 42 ;
 47 -> 48 ;
 51 -> 52 ;
 58 -> 59 ;
 62 -> 63 ;
 71 -> 72 ;
 78 -> 79 ;
 88 -> 89 ;
 90 -> 91 ;
 96 -> 97 ;
 100 -> 101 ;
 108 -> 109 ;
 121 -> 122 ;
 123 -> 124 ;
 132 -> 133 ;
 134 -> 135 ;
 137 -> 138 ;
 140 -> 141 ;
 141 -> 142 ;
 146 -> 147 ;
 148 -> 149 ;
 13 -> 16 ;
 18 -> 35 ;
 25 -> 28 ;
 30 -> 35 ;
 32 -> 35 ;
 34 -> 35 ;
 49 -> 50 ;
 54 -> 55 ;
 51 -> 56 ;
 41 -> 57 ;
 74 -> 75 ;
 71 -> 76 ;
 62 -> 77 ;
 91 -> 92 ;
 92 -> 93 ;
 101 -> 102 ;
 111 -> 112 ;
 126 -> 127 ;
 121 -> 128 ;
 123 -> 128 ;
 130 -> 131 ;
 138 -> 139 ;
 137 -> 140 ;
 147 -> 148 ;
 149 -> 150 ;
 150 -> 140[style=dashed];
 152 -> 153 ;
 57 -> 6[style=dashed];
 77 -> 6[style=dashed];
 131 -> 6[style=dashed];
 153 -> 6[style=dashed];
 6 -> 154 ;
 
 }
[WARNING] Tests run: 6, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 4.22 s - in fr.inria.dataflow.InitializedVariablesTest
[INFO] Running fr.inria.dataflow.UselessAssignmentTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in fr.inria.dataflow.UselessAssignmentTest
[INFO] Running fr.inria.controlflow.ControlFlowGraphTests
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in fr.inria.controlflow.ControlFlowGraphTests
[INFO] Running fr.inria.controlflow.AllBranchesReturnTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.605 s - in fr.inria.controlflow.AllBranchesReturnTest
[INFO] Running fr.inria.controlflow.ExceptionFlowTests
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_441 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_442 "];
3 [shape=rectangle, label="TRY_443 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_447 "];
5 [shape=rectangle, label="448 - return "];
6 [shape=rectangle, label="445 - Exception e "];
7 [shape=doublecircle, label="EXIT_440 "];
8 [shape=rectangle, label="FINALLY_446 "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_450 "];
10 [shape=rectangle, label="451 - a() "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_452 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_453 "];
13 [shape=rectangle, label="454 - b() "];
14 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_455 "];
15 [shape=point label="CONVERGE_444 "];
16 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_456 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 5 -> 7 ;
 6 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 8 ;
 8 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 7 ;
 
 }
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.718 s - in fr.inria.controlflow.ExceptionFlowTests
[INFO] Running fr.inria.controlflow.ForwardFlowBuilderVisitorTest
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_528 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_529 "];
3 [shape=rectangle, label="530 - int b = 0 "];
4 [shape=rectangle, label="531 - int i = 0 "];
5 [shape=diamond, label="533 - i < a.size() "];
6 [shape=point label="CONVERGE_532 "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_534 "];
8 [shape=rectangle, label="535 - b += i * b "];
9 [shape=rectangle, label="536 - i++ "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_537 "];
11 [shape=rectangle, label="538 - return b "];
12 [shape=doublecircle, label="EXIT_527 "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_539 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 5 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 5[style=dashed];
 6 -> 11 ;
 11 -> 12 ;
 13 -> 12 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_541 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_542 "];
3 [shape=rectangle, label="543 - int b = 0 "];
4 [shape=rectangle, label="544 - int i = 0 "];
5 [shape=point label="CONVERGE_545 "];
6 [shape=diamond, label="547 - i < a.size() "];
7 [shape=point label="CONVERGE_546 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_548 "];
9 [shape=rectangle, label="549 - int k = i * i "];
10 [shape=rectangle, label="550 - b += (i++) * b "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_551 "];
12 [shape=rectangle, label="552 - return b "];
13 [shape=doublecircle, label="EXIT_540 "];
14 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_553 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 6 -> 5[style=dashed];
 6 -> 7 ;
 5 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 6 ;
 7 -> 12 ;
 12 -> 13 ;
 14 -> 13 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_555 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_556 "];
3 [shape=rectangle, label="557 - int i = 0 "];
4 [shape=diamond, label="559 - i < a "];
5 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_560 "];
6 [shape=rectangle, label="561 - int k = i * i "];
7 [shape=rectangle, label="562 - b += (a * b) + i "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_563 "];
9 [shape=rectangle, label="564 - i++ "];
10 [shape=rectangle, label="565 - return b "];
11 [shape=doublecircle, label="EXIT_554 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_566 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 4[style=dashed];
 10 -> 11 ;
 12 -> 11 ;
 4 -> 10 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_568 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_569 "];
3 [shape=rectangle, label="570 - int k = a / 2 "];
4 [shape=diamond, label="571 - int b = (a > 0) ? k < 4 ? a * a : 8 : (-a) * a "];
5 [shape=diamond, label="573 - (a > 0) ? k < 4 ? a * a : 8 : (-a) * a "];
6 [shape=rectangle, label="575 - a * a "];
7 [shape=point label="CONVERGE_574 "];
8 [shape=rectangle, label="576 - 8 "];
9 [shape=point label="CONVERGE_572 "];
10 [shape=rectangle, label="577 - (-a) * a "];
11 [shape=rectangle, label="578 - return b "];
12 [shape=doublecircle, label="EXIT_567 "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_579 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 5 -> 8 ;
 8 -> 7 ;
 7 -> 9 ;
 4 -> 10 ;
 10 -> 9 ;
 9 -> 11 ;
 11 -> 12 ;
 13 -> 12 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_581 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_582 "];
3 [shape=diamond, label="583 - (b % 2) == 0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_585 "];
5 [shape=rectangle, label="586 - a += b * b "];
6 [shape=rectangle, label="587 - return a - b "];
7 [shape=doublecircle, label="EXIT_580 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_588 "];
9 [shape=rectangle, label="589 - return 0 "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_590 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 9 -> 7 ;
 10 -> 7 ;
 8 -> 9 ;
 3 -> 9 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_592 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_593 "];
3 [shape=rectangle, label="594 - int i = 0 "];
4 [shape=diamond, label="596 - i < a "];
5 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_597 "];
6 [shape=rectangle, label="598 - b += a * b "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_599 "];
8 [shape=rectangle, label="600 - i++ "];
9 [shape=rectangle, label="601 - return b "];
10 [shape=doublecircle, label="EXIT_591 "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_602 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 4[style=dashed];
 9 -> 10 ;
 11 -> 10 ;
 4 -> 9 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_604 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_605 "];
3 [shape=diamond, label="606 - (b % 2) == 0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_608 "];
5 [shape=rectangle, label="609 - return a + b "];
6 [shape=doublecircle, label="EXIT_603 "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_610 "];
8 [shape=point label="CONVERGE_607 "];
9 [shape=rectangle, label="611 - int i = 0 "];
10 [shape=diamond, label="613 - i < a "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_614 "];
12 [shape=rectangle, label="615 - b += a * b "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_616 "];
14 [shape=rectangle, label="617 - i++ "];
15 [shape=point label="612 - i < a "];
16 [shape=rectangle, label="618 - return a + (b * 2) "];
17 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_619 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 7 -> 8 ;
 3 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 10[style=dashed];
 10 -> 15 ;
 15 -> 16 ;
 16 -> 6 ;
 17 -> 6 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_621 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_622 "];
3 [shape=rectangle, label="623 - int b = 0 "];
4 [shape=rectangle, label="625 - int i "];
5 [shape=diamond, label="626 - a "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_627 "];
7 [shape=rectangle, label="628 - b += i * b "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_629 "];
9 [shape=rectangle, label="630 - return b "];
10 [shape=doublecircle, label="EXIT_620 "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_631 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 5[style=dashed];
 9 -> 10 ;
 11 -> 10 ;
 5 -> 9 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_633 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_634 "];
3 [shape=rectangle, label="635 - int b = 0 "];
4 [shape=diamond, label="636 - a "];
5 [shape=rectangle, label="638 - 1 "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_639 "];
7 [shape=rectangle, label="640 - b = 1 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_641 "];
9 [shape=point label="CONVERGE_637 "];
10 [shape=rectangle, label="642 - return b "];
11 [shape=doublecircle, label="EXIT_632 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_643 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 12 -> 11 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_645 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_646 "];
3 [shape=rectangle, label="647 - int[][] arrayOfInts = new int[][]{ new int[]{ 32, 87, 3, 589 }, new int[]{ 12, 1076, 2000, 8 }, new int[]{ 622, 127, 77, 955 } } "];
4 [shape=rectangle, label="648 - int searchfor = 12 "];
5 [shape=rectangle, label="649 - int i "];
6 [shape=rectangle, label="650 - int j = 0 "];
7 [shape=rectangle, label="651 - boolean foundIt = false "];
8 [shape=rectangle, label="652 - i = 0 "];
9 [shape=diamond, label="654 - i < arrayOfInts.length "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_655 "];
11 [shape=rectangle, label="656 - j = 0 "];
12 [shape=diamond, label="658 - j < arrayOfInts[i].length "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_659 "];
14 [shape=diamond, label="660 - arrayOfInts[i][j] == searchfor "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_662 "];
16 [shape=rectangle, label="663 - foundIt = true "];
17 [shape=rectangle, label="664 - break search "];
18 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_665 "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_666 "];
20 [shape=rectangle, label="667 - j++ "];
21 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_668 "];
22 [shape=rectangle, label="669 - i++ "];
23 [shape=rectangle, label="670 - return foundIt "];
24 [shape=doublecircle, label="EXIT_644 "];
25 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_671 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 17 ;
 17 -> 8[style=dashed];
 19 -> 20 ;
 20 -> 12[style=dashed];
 21 -> 22 ;
 22 -> 9[style=dashed];
 23 -> 24 ;
 25 -> 24 ;
 18 -> 19 ;
 14 -> 19 ;
 12 -> 21 ;
 9 -> 23 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_673 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_674 "];
3 [shape=diamond, label="675 - phase >= 1.0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_677 "];
5 [shape=diamond, label="679 - phase >= 1.0 "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_680 "];
7 [shape=rectangle, label="681 - source = target "];
8 [shape=rectangle, label="682 - phase -= 1.0 "];
9 [shape=rectangle, label="683 - baseIncrement = method1() "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_684 "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_685 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_686 "];
13 [shape=diamond, label="687 - (i == 0) && (starved || (!m3())) "];
14 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_689 "];
15 [shape=rectangle, label="690 - source = target = current "];
16 [shape=rectangle, label="691 - phase = 0.0 "];
17 [shape=rectangle, label="692 - baseIncrement = method1() "];
18 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_693 "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_694 "];
20 [shape=rectangle, label="695 - current = ((target - source) * phase) + source "];
21 [shape=rectangle, label="696 - outputs[i] = current * amplitudes[i] "];
22 [shape=rectangle, label="697 - double phaseIncrement = baseIncrement * rates[i] "];
23 [shape=rectangle, label="698 - phase += method2(phaseIncrement) "];
24 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_699 "];
25 [shape=doublecircle, label="EXIT_672 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 5[style=dashed];
 3 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 17 ;
 17 -> 18 ;
 20 -> 21 ;
 21 -> 22 ;
 22 -> 23 ;
 23 -> 24 ;
 24 -> 25 ;
 5 -> 11 ;
 11 -> 20 ;
 19 -> 20 ;
 18 -> 19 ;
 13 -> 19 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_673 "];
2 [shape=diamond, label="675 - phase >= 1.0 "];
3 [shape=diamond, label="679 - phase >= 1.0 "];
4 [shape=rectangle, label="681 - source = target "];
5 [shape=rectangle, label="682 - phase -= 1.0 "];
6 [shape=rectangle, label="683 - baseIncrement = method1() "];
7 [shape=diamond, label="687 - (i == 0) && (starved || (!m3())) "];
8 [shape=rectangle, label="690 - source = target = current "];
9 [shape=rectangle, label="691 - phase = 0.0 "];
10 [shape=rectangle, label="692 - baseIncrement = method1() "];
11 [shape=rectangle, label="695 - current = ((target - source) * phase) + source "];
12 [shape=rectangle, label="696 - outputs[i] = current * amplitudes[i] "];
13 [shape=rectangle, label="697 - double phaseIncrement = baseIncrement * rates[i] "];
14 [shape=rectangle, label="698 - phase += method2(phaseIncrement) "];
15 [shape=doublecircle, label="EXIT_672 "];
4 -> 5 ;
 5 -> 6 ;
 8 -> 9 ;
 9 -> 10 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 2 -> 7 ;
 7 -> 8 ;
 6 -> 3[style=dashed];
 3 -> 11 ;
 7 -> 11 ;
 10 -> 11 ;
 14 -> 15 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_701 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_702 "];
3 [shape=diamond, label="703 - (b % 2) == 0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_705 "];
5 [shape=rectangle, label="706 - return a + b "];
6 [shape=doublecircle, label="EXIT_700 "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_707 "];
8 [shape=rectangle, label="708 - int i = 0 "];
9 [shape=diamond, label="710 - i < a "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_711 "];
11 [shape=rectangle, label="712 - b += a * b "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_713 "];
13 [shape=rectangle, label="714 - i++ "];
14 [shape=rectangle, label="715 - return a + (b * 2) "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_716 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 9[style=dashed];
 14 -> 6 ;
 15 -> 6 ;
 7 -> 8 ;
 3 -> 8 ;
 9 -> 14 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_718 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_719 "];
3 [shape=rectangle, label="720 - int b = 0 "];
4 [shape=rectangle, label="722 - int i "];
5 [shape=diamond, label="723 - a "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_724 "];
7 [shape=rectangle, label="725 - int k = i * i "];
8 [shape=rectangle, label="726 - b += k * b "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_727 "];
10 [shape=rectangle, label="728 - return b "];
11 [shape=doublecircle, label="EXIT_717 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_729 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 5[style=dashed];
 10 -> 11 ;
 12 -> 11 ;
 5 -> 10 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_731 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_732 "];
3 [shape=rectangle, label="733 - int i = 0 "];
4 [shape=diamond, label="735 - i < 100 "];
5 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_736 "];
6 [shape=rectangle, label="737 - int k = 0 "];
7 [shape=diamond, label="739 - k < 20 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_740 "];
9 [shape=rectangle, label="741 - k += 3 "];
10 [shape=rectangle, label="742 - i = k + 5 "];
11 [shape=diamond, label="743 - (i % 2) == 0 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_745 "];
13 [shape=rectangle, label="746 - continue outer_loop "];
14 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_747 "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_748 "];
16 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_749 "];
17 [shape=rectangle, label="750 - return i "];
18 [shape=doublecircle, label="EXIT_730 "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_751 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 4[style=dashed];
 15 -> 7[style=dashed];
 16 -> 4[style=dashed];
 17 -> 18 ;
 19 -> 18 ;
 4 -> 17 ;
 7 -> 16 ;
 14 -> 15 ;
 11 -> 15 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_753 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_754 "];
3 [shape=diamond, label="755 - int b = (a > 0) ? a * a : (-a) * a "];
4 [shape=rectangle, label="757 - a * a "];
5 [shape=point label="CONVERGE_756 "];
6 [shape=rectangle, label="758 - (-a) * a "];
7 [shape=rectangle, label="759 - return b "];
8 [shape=doublecircle, label="EXIT_752 "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_760 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 3 -> 6 ;
 6 -> 5 ;
 5 -> 7 ;
 7 -> 8 ;
 9 -> 8 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_762 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_763 "];
3 [shape=rectangle, label="764 - int b = 0 "];
4 [shape=rectangle, label="765 - int i = 0 "];
5 [shape=diamond, label="767 - i < a.size() "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_768 "];
7 [shape=rectangle, label="769 - b += (i++) * b "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_770 "];
9 [shape=rectangle, label="771 - return b "];
10 [shape=doublecircle, label="EXIT_761 "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_772 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 5[style=dashed];
 9 -> 10 ;
 11 -> 10 ;
 5 -> 9 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_774 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_775 "];
3 [shape=rectangle, label="776 - int[][] arrayOfInts = new int[][]{ new int[]{ 32, 87, 3, 589 }, new int[]{ 12, 1076, 2000, 8 }, new int[]{ 622, 127, 77, 955 } } "];
4 [shape=rectangle, label="777 - int searchfor = 12 "];
5 [shape=rectangle, label="778 - int i "];
6 [shape=rectangle, label="779 - int j = 0 "];
7 [shape=rectangle, label="780 - boolean foundIt = false "];
8 [shape=rectangle, label="781 - i = 0 "];
9 [shape=diamond, label="783 - i < arrayOfInts.length "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_784 "];
11 [shape=rectangle, label="785 - j = 0 "];
12 [shape=diamond, label="787 - j < arrayOfInts[i].length "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_788 "];
14 [shape=diamond, label="789 - arrayOfInts[i][j] == searchfor "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_791 "];
16 [shape=rectangle, label="792 - foundIt = true "];
17 [shape=rectangle, label="793 - break "];
18 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_794 "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_795 "];
20 [shape=rectangle, label="796 - j++ "];
21 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_797 "];
22 [shape=rectangle, label="798 - i++ "];
23 [shape=rectangle, label="799 - return foundIt "];
24 [shape=doublecircle, label="EXIT_773 "];
25 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_800 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 17 ;
 19 -> 20 ;
 20 -> 12[style=dashed];
 21 -> 22 ;
 22 -> 9[style=dashed];
 23 -> 24 ;
 25 -> 24 ;
 17 -> 21 ;
 12 -> 21 ;
 18 -> 19 ;
 14 -> 19 ;
 9 -> 23 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_802 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_803 "];
3 [shape=diamond, label="804 - (b % 2) == 0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_806 "];
5 [shape=rectangle, label="807 - return nestedIfs(a, b) "];
6 [shape=doublecircle, label="EXIT_801 "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_808 "];
8 [shape=rectangle, label="809 - return a + (b * 2) "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_810 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 8 -> 6 ;
 9 -> 6 ;
 7 -> 8 ;
 3 -> 8 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_812 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_813 "];
3 [shape=diamond, label="814 - (b % 2) == 0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_816 "];
5 [shape=rectangle, label="817 - return a - b "];
6 [shape=doublecircle, label="EXIT_811 "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_818 "];
8 [shape=rectangle, label="819 - return 0 "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_820 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 8 -> 6 ;
 9 -> 6 ;
 7 -> 8 ;
 3 -> 8 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_822 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_823 "];
3 [shape=rectangle, label="824 - int b = 0 "];
4 [shape=rectangle, label="825 - int i = 0 "];
5 [shape=point label="CONVERGE_826 "];
6 [shape=diamond, label="828 - i < a.size() "];
7 [shape=point label="CONVERGE_827 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_829 "];
9 [shape=rectangle, label="830 - b += (i++) * b "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_831 "];
11 [shape=rectangle, label="832 - return b "];
12 [shape=doublecircle, label="EXIT_821 "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_833 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 6 -> 5[style=dashed];
 6 -> 7 ;
 5 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 10 -> 6 ;
 7 -> 11 ;
 11 -> 12 ;
 13 -> 12 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_835 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_836 "];
3 [shape=rectangle, label="837 - a = a + (a / 2) "];
4 [shape=rectangle, label="838 - return 10 * a "];
5 [shape=doublecircle, label="EXIT_834 "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_839 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 6 -> 5 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_841 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_842 "];
3 [shape=diamond, label="843 - (b % 2) == 0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_845 "];
5 [shape=rectangle, label="846 - return a - b "];
6 [shape=doublecircle, label="EXIT_840 "];
7 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_847 "];
8 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_848 "];
9 [shape=rectangle, label="849 - b = b + a "];
10 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_850 "];
11 [shape=rectangle, label="851 - return b * b "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_852 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 3 -> 8 ;
 8 -> 9 ;
 9 -> 10 ;
 11 -> 6 ;
 12 -> 6 ;
 7 -> 11 ;
 10 -> 11 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_854 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_855 "];
3 [shape=rectangle, label="856 - int b = 0 "];
4 [shape=rectangle, label="857 - int i = 0 "];
5 [shape=diamond, label="859 - i < a.size() "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_860 "];
7 [shape=rectangle, label="861 - b += i * b "];
8 [shape=rectangle, label="862 - i++ "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_863 "];
10 [shape=rectangle, label="864 - return b "];
11 [shape=doublecircle, label="EXIT_853 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_865 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 5[style=dashed];
 10 -> 11 ;
 12 -> 11 ;
 5 -> 10 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_867 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_868 "];
3 [shape=rectangle, label="869 - a = a + (a / 2) "];
4 [shape=rectangle, label="870 - return 10 * a "];
5 [shape=doublecircle, label="EXIT_866 "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_871 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 6 -> 5 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_873 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_874 "];
3 [shape=rectangle, label="875 - int b = 0 "];
4 [shape=diamond, label="876 - a "];
5 [shape=rectangle, label="878 - 1 "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_879 "];
7 [shape=rectangle, label="880 - return 0 "];
8 [shape=doublecircle, label="EXIT_872 "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_881 "];
10 [shape=rectangle, label="882 - 2 "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_883 "];
12 [shape=rectangle, label="884 - b = a * 2 "];
13 [shape=rectangle, label="885 - break "];
14 [shape=point label="CONVERGE_877 "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_886 "];
16 [shape=rectangle, label="887 - 3 "];
17 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_888 "];
18 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_889 "];
19 [shape=rectangle, label="890 - 4 "];
20 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_891 "];
21 [shape=rectangle, label="892 - b = a * 9 "];
22 [shape=rectangle, label="893 - break "];
23 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_894 "];
24 [shape=rectangle, label="STATEMENT_895 "];
25 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_896 "];
26 [shape=rectangle, label="897 - return 0 "];
27 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_898 "];
28 [shape=rectangle, label="899 - return b "];
29 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_900 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 9 -> 10 ;
 4 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 12 -> 13 ;
 13 -> 14 ;
 15 -> 16 ;
 4 -> 16 ;
 16 -> 17 ;
 17 -> 18 ;
 18 -> 19 ;
 4 -> 19 ;
 19 -> 20 ;
 20 -> 21 ;
 21 -> 22 ;
 22 -> 14 ;
 23 -> 24 ;
 4 -> 24 ;
 24 -> 25 ;
 25 -> 26 ;
 26 -> 8 ;
 27 -> 14 ;
 14 -> 28 ;
 28 -> 8 ;
 29 -> 8 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_902 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_903 "];
3 [shape=rectangle, label="904 - int b = 0 "];
4 [shape=rectangle, label="905 - int i = 0 "];
5 [shape=diamond, label="908 - i < a.size() "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_909 "];
7 [shape=rectangle, label="910 - int k = i * i "];
8 [shape=rectangle, label="911 - b += (i++) * b "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_912 "];
10 [shape=rectangle, label="913 - return b "];
11 [shape=doublecircle, label="EXIT_901 "];
12 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_914 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 6 -> 7 ;
 7 -> 8 ;
 8 -> 9 ;
 9 -> 5 ;
 10 -> 11 ;
 12 -> 11 ;
 4 -> 6 ;
 5 -> 6[style=dashed];
 5 -> 10 ;
 
 }
digraph null { 
node [fontsize = 8];
1 [shape=Mdiamond, label="BEGIN_916 "];
2 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_917 "];
3 [shape=diamond, label="918 - a > 0 "];
4 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_920 "];
5 [shape=diamond, label="921 - b > 0 "];
6 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_923 "];
7 [shape=rectangle, label="924 - return a * b "];
8 [shape=doublecircle, label="EXIT_915 "];
9 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_925 "];
10 [shape=point label="CONVERGE_922 "];
11 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_926 "];
12 [shape=point label="CONVERGE_919 "];
13 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_927 "];
14 [shape=diamond, label="928 - b < 1 "];
15 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_930 "];
16 [shape=rectangle, label="931 - return (a * b) * b "];
17 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_932 "];
18 [shape=point label="CONVERGE_929 "];
19 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_BEGIN_933 "];
20 [shape=rectangle, label="934 - a = a * b "];
21 [shape=rectangle, label="935 - b = b * b "];
22 [shape=rectangle, label="936 - return b "];
23 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_937 "];
24 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_938 "];
25 [shape=rectangle, label="939 - return 0 "];
26 [shape=rectangle, style=filled, fillcolor=gray, label="BLOCK_END_940 "];
1 -> 2 ;
 2 -> 3 ;
 3 -> 4 ;
 4 -> 5 ;
 5 -> 6 ;
 6 -> 7 ;
 7 -> 8 ;
 9 -> 10 ;
 5 -> 10 ;
 10 -> 11 ;
 11 -> 12 ;
 3 -> 13 ;
 13 -> 14 ;
 14 -> 15 ;
 15 -> 16 ;
 16 -> 8 ;
 17 -> 18 ;
 14 -> 19 ;
 19 -> 20 ;
 20 -> 21 ;
 21 -> 22 ;
 22 -> 8 ;
 23 -> 18 ;
 18 -> 24 ;
 24 -> 12 ;
 12 -> 25 ;
 25 -> 8 ;
 26 -> 8 ;
 
 }
[INFO] Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.406 s - in fr.inria.controlflow.ForwardFlowBuilderVisitorTest
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 55, Failures: 0, Errors: 0, Skipped: 1
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  17.082 s
[INFO] Finished at: 2021-09-30T21:02:47+02:00
[INFO] ------------------------------------------------------------------------
+ echo check dep to latest version
check dep to latest version
+ git diff
Finished: SUCCESS
